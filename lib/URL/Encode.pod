=head1 NAME

URL::Encode - Encoding and decoding of C<application/x-www-form-urlencoded> encoding.

=head1 SYNOPSIS

    $octets = url_decode($octets);
    $string = url_decode_utf8($octets);
    
    $octets = url_encode($octets);
    $octets = url_encode_utf8($string);
    
    $params = url_params_flat($octets [, $utf8 = false]);
    $params = url_params_mixed($octets [, $utf8 = false]);
    $params = url_params_multi($octets [, $utf8 = false]);
              url_params_each($octets, $callback [, $utf8 = false]);

=head1 DESCRIPTION

This module provides functions to encode and decode strings into and from the 
C<application/x-www-form-urlencoded> encoding.

The C<application/x-www-form-urlencoded> format encodes a ordered data sets of
pairs consisting of a name and a value, with pairs seperated by ampersand and 
names and values seperated by the equal sign. Space characters are replaced
with plus sign and any characters not in the unreserved character set is 
encoded using the percent-encoding scheme also used for resource identifiers. 
A percent-encoded octet is encoded as a character triplet, consisting of the 
percent character "%" followed by the two hexadecimal digits representing 
that octet's numeric value.

The unreserved character set includes the uppercase and lowercase letters, 
decimal digits, hyphen, period, underscore, and tilde.

    ABCDEFGHIJKLMNOPQRSTUVWXYZ
    abcdefghijklmnopqrstuvwxyz
    0123456789
    - . _ ~

=head1 FUNCTIONS

=head2 url_decode

    $octets = url_decode($octets);
    
Returns a decoded representation of the given URL-encoded C<$octets> as an 
octet string.

=head2 url_decode_utf8

    $string = url_decode_utf8($octets);

Returns a decoded representation of the given URL-encoded <$octets> in
UTF-8 encoding as a character string.

=head2 url_encode

    $octets = url_encode($octets);

Returns a URL-encoded representation of the given C<$octets> as an octet 
string.

=head2 url_encode_utf8

    $octets = url_encode_utf8($string);

Returns a URL-encoded representation of C<$string> in UTF-8 encoding as an 
octet string.

=head2 url_params_flat

    $params = url_params_flat($octets);
    $params = url_params_flat($octets, $utf8);

Parses a URL-encoded form data sets of name/value pairs from the given octets. 
Returns an ARRAY reference containing the URL-decoded name/value pairs in order.

    $params = url_params_flat('foo=A&foo=B&bar=C');
    $params; # [ foo => 'A', foo => 'B', bar => 'C' ]

=head2 url_params_mixed

    $params = url_params_mixed($octets);
    $params = url_params_mixed($octets, $utf8);

Parses a URL-encoded form data sets of name/value pairs from the given octets. 
Returns a HASH reference containing the URL-decoded name/value pairs. Multiple 
occurrences of a parameter will result in an ARRAY reference holding all 
the values for that parameter in order.

    $params = url_params_mixed('foo=A&foo=B&bar=C');
    $params; # { foo => [ 'A', 'B' ], bar => 'C' }

=head2 url_params_multi

    $params = url_params_multi($octets);
    $params = url_params_multi($octets, $utf8);

Parses a URL-encoded form data sets of name/value pairs from the given octets. 
Returns a HASH reference containing the URL-decoded name/value pairs. Values 
are stored in an ARRAY reference.

    $params = url_params_multi('foo=A&foo=B&bar=C');
    $params; # { foo => [ 'A', 'B' ], bar => [ 'C' ] }

=head2 url_params_each

    url_params_each($octets, $callback);
    url_params_each($octets, $callback, $utf8);

Parses a URL-encoded form data sets of name/value pairs from the given octets. 
Invokes the given callback for each URL-decoded name/value pair.

    $callback = sub {
        my ($name, $value) = @_;
    };
    
    url_params_each($octets, $callback);

=head1 EXPORTS

None by default. All functions can be exported using the C<:all> tag or individually.

=head1 DIAGNOSTICS

=over 4

=item B<(F)> Usage: %s

Subroutine called with wrong number of arguments.

=item B<(F)> Wide character in octet string

=item B<(F)> Malformed UTF-8 in URL-decoded octets

=back

=head1 SEE ALSO

=over 4

=item L<URL::Encode::XS>

XS implementation of C<URL::Encode>.

=item L<CGI::Deurl::XS>

=back

=head1 SUPPORT

Please report any bugs or feature requests to C<bug-url-encode@rt.cpan.org>, or through
the web interface at L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=URL-Encode>

=head1 AUTHOR

Christian Hansen C<chansen@cpan.org>

=head1 COPYRIGHT

Copyright 2013 by Christian Hansen.

This library is free software; you can redistribute it and/or modify 
it under the same terms as Perl itself.

